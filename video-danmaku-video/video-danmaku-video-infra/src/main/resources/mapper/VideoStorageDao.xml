<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.videodanmaku.video.infra.basic.mapper.VideoStorageDao">

    <resultMap type="com.videodanmaku.video.infra.basic.entity.VideoStorage" id="VideoStorageMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="videoId" column="video_id" jdbcType="INTEGER"/>
        <result property="resolution" column="resolution" jdbcType="VARCHAR"/>
        <result property="videoUrl" column="video_url" jdbcType="VARCHAR"/>
        <result property="format" column="format" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="VideoStorageMap">
        select
id, video_id, resolution, video_url, format, create_time, update_time
        from video_storage
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="VideoStorageMap">
        select
id, video_id, resolution, video_url, format, create_time, update_time
        from video_storage
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="videoId != null">
                and video_id = #{videoId}
            </if>
            <if test="resolution != null and resolution != ''">
                and resolution = #{resolution}
            </if>
            <if test="videoUrl != null and videoUrl != ''">
                and video_url = #{videoUrl}
            </if>
            <if test="format != null and format != ''">
                and format = #{format}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from video_storage
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="videoId != null">
                and video_id = #{videoId}
            </if>
            <if test="resolution != null and resolution != ''">
                and resolution = #{resolution}
            </if>
            <if test="videoUrl != null and videoUrl != ''">
                and video_url = #{videoUrl}
            </if>
            <if test="format != null and format != ''">
                and format = #{format}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into video_storage(video_id, resolution, video_url, format, create_time, update_time)
        values (#{videoId}, #{resolution}, #{videoUrl}, #{format}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into video_storage(video_id, resolution, video_url, format, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.videoId}, #{entity.resolution}, #{entity.videoUrl}, #{entity.format}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into video_storage(video_id, resolution, video_url, format, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.videoId}, #{entity.resolution}, #{entity.videoUrl}, #{entity.format}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
video_id = values(video_id),
resolution = values(resolution),
video_url = values(video_url),
format = values(format),
create_time = values(create_time),
update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update video_storage
        <set>
            <if test="videoId != null">
                video_id = #{videoId},
            </if>
            <if test="resolution != null and resolution != ''">
                resolution = #{resolution},
            </if>
            <if test="videoUrl != null and videoUrl != ''">
                video_url = #{videoUrl},
            </if>
            <if test="format != null and format != ''">
                format = #{format},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from video_storage where id = #{id}
    </delete>

</mapper>

